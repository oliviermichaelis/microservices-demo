name: build and deploy

on: [push, pull_request]

jobs:
#  test:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Go
#      uses: actions/setup-go@v2
#      with:
#        go-version: 1.15
#    - name: Build
#      run: go test -v ./...
  build-container-frontend:
    runs-on: ubuntu-latest
    name: build frontend container
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: oliviermichaelis
          password: ${{ secrets.PACKAGES_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: docker_build_frontend
        uses: docker/build-push-action@v2
        with:
          context: ./src/frontend
          file: ./src/frontend/Dockerfile
          push: true
          tags: ghcr.io/oliviermichaelis/frontend:${{ github.sha }}
  build-container-pcs:
    runs-on: ubuntu-latest
    name: build pcs container
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: oliviermichaelis
          password: ${{ secrets.PACKAGES_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: docker_build_productcatalogservice
        uses: docker/build-push-action@v2
        with:
          context: ./src/productcatalogservice
          file: ./src/productcatalogservice/Dockerfile
          push: true
          tags: ghcr.io/oliviermichaelis/productcatalogservice:${{ github.sha }}
  build-container-cs:
    runs-on: ubuntu-latest
    name: build cs container
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: oliviermichaelis
          password: ${{ secrets.PACKAGES_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: docker_build_currencyservice
        uses: docker/build-push-action@v2
        with:
          context: ./src/currencyservice
          file: ./src/currencyservice/Dockerfile
          push: true
          tags: ghcr.io/oliviermichaelis/currencyservice:${{ github.sha }}
  build-container-cartservice:
    runs-on: ubuntu-latest
    name: build cartservice container
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: oliviermichaelis
          password: ${{ secrets.PACKAGES_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: docker_build_cartservice
        uses: docker/build-push-action@v2
        with:
          context: ./src/cartservice
          file: ./src/cartservice/Dockerfile
          push: true
          tags: ghcr.io/oliviermichaelis/cartservice:${{ github.sha }}
  build-container-recommendationservice:
    runs-on: ubuntu-latest
    name: build recommendation container
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: oliviermichaelis
          password: ${{ secrets.PACKAGES_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: docker_build_recommendationservice
        uses: docker/build-push-action@v2
        with:
          context: ./src/recommendationservice
          file: ./src/recommendationservice/Dockerfile
          push: true
          tags: ghcr.io/oliviermichaelis/recommendationservice:${{ github.sha }}
  deploy:
    needs:
      - build-container-frontend
      - build-container-cs
      - build-container-pcs
      - build-container-cartservice
      - build-container-recommendationservice
    runs-on: ubuntu-latest
    container:
      image: bitnami/kubectl
    steps:
      - name: create .kube directory
        run: mkdir -p ~/.kube
      - name: Store kubeconfig
        shell: sh
        env:
          KUBECONFIG_FULL: ${{ secrets.OKTETO_KUBECONFIG }}
        run: 'echo "$KUBECONFIG_FULL}" | base64 -di > ~/.kube/config'
      - uses: actions/checkout@v2
      - name: change image of frontend
        shell: sh
        run: 'sed -i "s=image: frontend=image: ghcr.io/oliviermichaelis/frontend:${GITHUB_SHA}=g" kubernetes-manifests/frontend.yaml'
      - name: deploy frontend
        run: kubectl apply -f kubernetes-manifests/frontend.yaml
      - name: change image of productcatalogservice
        shell: sh
        run: 'sed -i "s=image: ghcr.io/oliviermichaelis/productcatalogservice:master=image: ghcr.io/oliviermichaelis/productcatalogservice:${GITHUB_SHA}=g" kubernetes-manifests/productcatalogservice_cloud.yaml'
      - name: deploy productcatalogservice
        run: kubectl apply -f kubernetes-manifests/productcatalogservice_cloud.yaml
      - name: change image of currencyservice
        shell: sh
        run: 'sed -i "s=image: currencyservice=image: ghcr.io/oliviermichaelis/currencyservice:${GITHUB_SHA}=g" kubernetes-manifests/currencyservice.yaml'
      - name: deploy currencyservice
        run: kubectl apply -f kubernetes-manifests/currencyservice.yaml
      - name: change image of cartservice
        shell: sh
        run: 'sed -i "s=image: cartservice=image: ghcr.io/oliviermichaelis/cartservice:${GITHUB_SHA}=g" kubernetes-manifests/cartservice.yaml'
      - name: deploy cartservice
        run: kubectl apply -f kubernetes-manifests/cartservice.yaml
      - shell: sh
        run: 'sed -i "s=image: recommendationservice=image: ghcr.io/oliviermichaelis/recommendationservice:${GITHUB_SHA}=g" kubernetes-manifests/recommendationservice.yaml'
      - name: deploy recommendationservice
        run: kubectl apply -f kubernetes-manifests/recommendationservice.yaml
